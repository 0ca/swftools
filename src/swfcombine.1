.TH swfcombine "1" "October 2001" "swfcombine" "swftools"
.SH NAME
swfcombine - a tool for combining swf (flash) files
.SH Synopsis
.B swfcombine
[\fIoptions\fR] [\fImasterfile.swf\fR] [\fIslavename1=\fR][\fIslavefile1.swf\fR] ... [\fIslavenameN=\fR][\fIslavefileN.swf\fR]

.B swfcombine
[\fIoptions\fR] [\fImasterfile.swf\fR] [\fI#id1=\fR][\fIslavefile1.swf\fR] ... [\fI#idN=\fR][\fIslavefileN.swf\fR]

.B swfcombine
[\fIoptions\fR] --stack [\fIslavename1=\fR][\fIslavefile1.swf\fR] ... [\fIslavenameN=\fR][\fIslavefileN.swf\fR]

.B swfcombine
[\fIoptions\fR] --dummy [\fIfile.swf\fR]
.SH DESCRIPTION
Take two or more SWF files, and combine them into a new SWF. SWFs can either
be stacked (no masterfile is present) or inserted (into the masterfile).
.PP
SWF files are animation files which can be displayed in Web Browsers using
the Flash Plugin.
.LP
For template mechanisms, it's often convenient to separate the processes
of generating small animation fragments and merging them into a big
movie. swfcombine can be used to perform the latter.
.SH OPTIONS
.TP
\fB\-h\fR, \fB\-\-help\fR
Print short help message and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version info and exit
.TP
\fB\-o\fR, \fB\-\-output\fR \fIfilename\fR
Explicitly specify output file. (otherwise, output.swf will be used)
.TP
\fB\-l\fR, \fB\-\-overlay\fR
Don't remove any master objects, only overlay new objects.
.TP
\fB\-c\fR, \fB\-\-clip\fR
Clip the slave objects by the corresponding master objects.
.TP
\fB\-d\fR, \fB\-\-dummy\fR
Don't require the presence of slave objects. Usually used together with \fB\-X\fR, \fB\-Y\fR or \fB\-r\fR.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Be verbose. Use more than one -v for greater effect.
.TP
\fB\-t\fR, \fB\-\-stack\fR
Don't assume the first file is a master file. Instead, store each
file in a seperate frame.
.TP
\fB\-X\fR, \fB\-\-width\fR \fIwidth\fR
Force the output to width \fIwidth\fR. (Otherwise, the width of the master file will be used)
.TP
\fB\-Y\fR, \fB\-\-height\fR \fIheight\fR
Force the output to height \fIheight\fR. (Otherwise, the height of the master file will be used)
.TP
\fB\-r\fR, \fB\-\-rate\fR \fIrate\fR
Force the output to have the framerate \fIrate\fR. (Otherwise, the framerate of the master file will be used)
.TP
\fB\-x\fR, \fB\-\-xpos\fR \fIxpos\fR
(move x) Adjust position of slave by xpos twips (1/20 pixel).
.TP
\fB\-y\fR, \fB\-\-ypos\fR \fIypos\fR
(move y) Adjust position of slave by ypos twips (1/20 pixel).
.TP
\fB\-s\fR, \fB\-\-scale\fR \fIscale\fR
(scale) Adjust size of slave by scale%
.PP
.SH Combining two or more .swf files using a master file
Of the flash files to be combined, all except one will be packed into a sprite
structure (Movieclip) which will then be inserted into the master .swf file.
This means that, in terms of trees, when combining several flash files,
one will form the root of the tree, while the others will be
appended to the root as a subnode.
The user has to specify which of the files will become the root
of the tree ("master") and which will be the appended nodes ("slaves").
The slave files must all have a name, which is then used to determine
their exact position inside the master file.
The slave files will then be converted into sprites, inserted into the
master file, and all PlaceObject tags in the master file which match the
name of the slave file will be updated to correctly display the slave sprite.
The slave name may also be the object id, preceded by '#', in which case 
the object to be replaced is referenced by id and not by instance name.
.SH Combining (stacking) one or more .swf files without a master
The flash files will be inserted in seperate frames. They will still be
packed into Movieclips, therefore the outputfile will have exactly as many
frames as there were inputfiles. Also, the files don't need to have names.
If you want to access the Movieclips, their names are frameXX, where XX is
the decimal number of the file, starting by zero (00).

.SH EXAMPLES

Create two flash movies. Insert some rectangle into one of them, and give
it a name. (E.g. "foo") Now call

swfcombine -o combined.swf master.swf foo=slave.swf

As a result, the slave movie should be visible inside the master movie
at the position where the rectangle used to be.

.SH AUTHOR

Matthias Kramm <kramm@quiss.org>

